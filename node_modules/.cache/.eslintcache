[{"/Users/rishaankumar/Desktop/Code/TrackTheSpot_v1/track-the-spot/src/index.js":"1","/Users/rishaankumar/Desktop/Code/TrackTheSpot_v1/track-the-spot/src/reportWebVitals.js":"2","/Users/rishaankumar/Desktop/Code/TrackTheSpot_v1/track-the-spot/src/App.js":"3","/Users/rishaankumar/Desktop/Code/TrackTheSpot_v1/track-the-spot/src/Table.js":"4","/Users/rishaankumar/Desktop/Code/TrackTheSpot_v1/track-the-spot/src/Song.js":"5","/Users/rishaankumar/Desktop/Code/TrackTheSpot_v1/track-the-spot/src/Landing.js":"6","/Users/rishaankumar/Desktop/Code/TrackTheSpot_v1/track-the-spot/src/Home.js":"7","/Users/rishaankumar/Desktop/Code/TrackTheSpot_v1/track-the-spot/src/AboutPage.js":"8","/Users/rishaankumar/Desktop/Code/TrackTheSpot_v1/track-the-spot/src/HomeNavBar.js":"9","/Users/rishaankumar/Desktop/Code/TrackTheSpot_v1/track-the-spot/src/TableNavBar.js":"10","/Users/rishaankumar/Desktop/Code/TrackTheSpot_v1/track-the-spot/src/RecPage.js":"11","/Users/rishaankumar/Desktop/Code/TrackTheSpot_v1/track-the-spot/src/Artist.js":"12","/Users/rishaankumar/Desktop/Code/wrappedly/wrappedly/src/index.js":"13","/Users/rishaankumar/Desktop/Code/wrappedly/wrappedly/src/App.js":"14","/Users/rishaankumar/Desktop/Code/wrappedly/wrappedly/src/AboutPage.js":"15","/Users/rishaankumar/Desktop/Code/wrappedly/wrappedly/src/Landing.js":"16","/Users/rishaankumar/Desktop/Code/wrappedly/wrappedly/src/RecPage.js":"17","/Users/rishaankumar/Desktop/Code/wrappedly/wrappedly/src/Home.js":"18","/Users/rishaankumar/Desktop/Code/wrappedly/wrappedly/src/Table.js":"19","/Users/rishaankumar/Desktop/Code/wrappedly/wrappedly/src/HomeNavBar.js":"20","/Users/rishaankumar/Desktop/Code/wrappedly/wrappedly/src/Song.js":"21","/Users/rishaankumar/Desktop/Code/wrappedly/wrappedly/src/Artist.js":"22"},{"size":285,"mtime":1729555715551,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1699579153656,"results":"25","hashOfConfig":"24"},{"size":1297,"mtime":1729555831483,"results":"26","hashOfConfig":"24"},{"size":1522,"mtime":1731111946157,"results":"27","hashOfConfig":"24"},{"size":600,"mtime":1731111964110,"results":"28","hashOfConfig":"24"},{"size":1974,"mtime":1731114699201,"results":"29","hashOfConfig":"24"},{"size":5435,"mtime":1731113759315,"results":"30","hashOfConfig":"24"},{"size":724,"mtime":1731111765287,"results":"31","hashOfConfig":"24"},{"size":4005,"mtime":1731114168596,"results":"32","hashOfConfig":"24"},{"size":2050,"mtime":1707239757601,"results":"33","hashOfConfig":"24"},{"size":484,"mtime":1731111787329,"results":"34","hashOfConfig":"24"},{"size":912,"mtime":1731112572159,"results":"35","hashOfConfig":"24"},{"size":285,"mtime":1751396488929,"results":"36","hashOfConfig":"37"},{"size":1297,"mtime":1751396488429,"results":"38","hashOfConfig":"37"},{"size":2724,"mtime":1751403265461,"results":"39","hashOfConfig":"37"},{"size":2016,"mtime":1751402663923,"results":"40","hashOfConfig":"37"},{"size":3459,"mtime":1751404262688,"results":"41","hashOfConfig":"37"},{"size":15873,"mtime":1751400971246,"results":"42","hashOfConfig":"37"},{"size":2253,"mtime":1751399766413,"results":"43","hashOfConfig":"37"},{"size":7743,"mtime":1751404264048,"results":"44","hashOfConfig":"37"},{"size":600,"mtime":1751396488430,"results":"45","hashOfConfig":"37"},{"size":912,"mtime":1751396488429,"results":"46","hashOfConfig":"37"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"y1whc7",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"1697gqj",{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"64","usedDeprecatedRules":"93"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"/Users/rishaankumar/Desktop/Code/TrackTheSpot_v1/track-the-spot/src/index.js",[],[],["122","123","124","125","126","127"],"/Users/rishaankumar/Desktop/Code/TrackTheSpot_v1/track-the-spot/src/reportWebVitals.js",[],[],["128","129","130","131","132","133"],"/Users/rishaankumar/Desktop/Code/TrackTheSpot_v1/track-the-spot/src/App.js",[],[],"/Users/rishaankumar/Desktop/Code/TrackTheSpot_v1/track-the-spot/src/Table.js",[],[],"/Users/rishaankumar/Desktop/Code/TrackTheSpot_v1/track-the-spot/src/Song.js",["134","135"],[],"import './Song.css';\n\nfunction Song(props) {\n  return (\n    <div>\n      <a className='link' href={props.link} target=\"_blank\">\n        <div className='song' >\n          <div className='songRank'>\n            {props.rank}.\n          </div>\n          <div className='songImageBody'>\n            <img className='songImage' src={props.image} />\n          </div>\n          <div className='songDetails'>\n            <div className='songTitle'>{props.title}</div>\n            <div className='songArtist'>{props.artist}</div>\n          </div>\n        </div>\n      </a>\n    </div>\n  );\n}\n\nexport default Song;","/Users/rishaankumar/Desktop/Code/TrackTheSpot_v1/track-the-spot/src/Landing.js",[],[],"/Users/rishaankumar/Desktop/Code/TrackTheSpot_v1/track-the-spot/src/Home.js",["136","137"],[],"import './Home.css';\nimport { useEffect, useState } from \"react\";\nimport Table from './Table.js';\nimport HomeNavBar from './HomeNavBar.js';\nimport { useNavigate } from 'react-router-dom';\nimport Button from '@mui/material/Button';\n\nfunction Home({ onLogout }) {\n    const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\n    const [topItems, setTopItems] = useState([]);\n    const [activeDatatype, setActiveDatatype] = useState('tracks');\n    const [activeDuration, setActiveDuration] = useState('short_term');\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        if (!token) {\n            navigate('/landing');\n            return;\n        }\n\n        fetchTopItems();\n    }, [token, activeDatatype, activeDuration, navigate]);\n\n    const fetchTopItems = async () => {\n        try {\n            const response = await fetch(\n                `https://api.spotify.com/v1/me/top/${activeDatatype}?time_range=${activeDuration}&limit=50`,\n                {\n                    method: 'GET',\n                    headers: {\n                        'Authorization': `Bearer ${token}`\n                    }\n                }\n            );\n\n            if (!response.ok) {\n                throw new Error('Failed to fetch top items');\n            }\n\n            const data = await response.json();\n            setTopItems(data.items || []);\n        } catch (error) {\n            console.error(\"Error fetching top items:\", error);\n        }\n    };\n\n    const handleDatatypeClick = (datatype) => {\n        setActiveDatatype(datatype);\n    };\n\n    const handleDurationClick = (duration) => {\n        setActiveDuration(duration);\n    };\n\n    const isActive = (current, active) => current === active;\n\n    return (\n        <div className='Home'>\n            <HomeNavBar onLogout={onLogout} />\n            <div className='controls'>\n                <div className='typeControls'>\n                    <Button\n                        variant=\"contained\"\n                        size=\"large\"\n                        sx={{\n                            backgroundColor: isActive('tracks', activeDatatype) ? '#479454' : '#8B0000', // Deep red when inactive\n                            '&:hover': {\n                                backgroundColor: isActive('tracks', activeDatatype) ? '#3a7a46' : '#600000',\n                            },\n                            color: 'white',\n                        }}\n                        onClick={() => handleDatatypeClick('tracks')}\n                    >\n                        Songs\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        size=\"large\"\n                        sx={{\n                            backgroundColor: isActive('artists', activeDatatype) ? '#479454' : '#8B0000',\n                            '&:hover': {\n                                backgroundColor: isActive('artists', activeDatatype) ? '#3a7a46' : '#600000',\n                            },\n                            color: 'white',\n                        }}\n                        onClick={() => handleDatatypeClick('artists')}\n                    >\n                        Artists\n                    </Button>\n                </div>\n                <div className='timeControls'>\n                    <Button\n                        variant=\"contained\"\n                        size=\"large\"\n                        sx={{\n                            backgroundColor: isActive('short_term', activeDuration) ? '#479454' : '#8B0000',\n                            '&:hover': {\n                                backgroundColor: isActive('short_term', activeDuration) ? '#3a7a46' : '#600000',\n                            },\n                            color: 'white',\n                        }}\n                        onClick={() => handleDurationClick('short_term')}\n                    >\n                        Month\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        size=\"large\"\n                        sx={{\n                            backgroundColor: isActive('medium_term', activeDuration) ? '#479454' : '#8B0000',\n                            '&:hover': {\n                                backgroundColor: isActive('medium_term', activeDuration) ? '#3a7a46' : '#600000',\n                            },\n                            color: 'white',\n                        }}\n                        onClick={() => handleDurationClick('medium_term')}\n                    >\n                        6 Months\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        size=\"large\"\n                        sx={{\n                            backgroundColor: isActive('long_term', activeDuration) ? '#479454' : '#8B0000',\n                            '&:hover': {\n                                backgroundColor: isActive('long_term', activeDuration) ? '#3a7a46' : '#600000',\n                            },\n                            color: 'white',\n                        }}\n                        onClick={() => handleDurationClick('long_term')}\n                    >\n                        All Time\n                    </Button>\n                </div>\n            </div>\n            <Table topItems={topItems} datatype={activeDatatype} />\n        </div>\n    );\n}\n\nexport default Home;","/Users/rishaankumar/Desktop/Code/TrackTheSpot_v1/track-the-spot/src/AboutPage.js",["138","139","140","141","142","143","144","145"],[],"import './AboutPage.css';\nimport { useEffect, useState, useRef } from \"react\";\nimport Home from './Home.js';\nimport Landing from './Landing.js';\nimport HomeNavBar from './HomeNavBar.js';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\n\nfunction AboutPage() {\n    const [token, setToken] = useState(\"\")\n\n    const logout = () => {\n        console.log(token);\n        setToken(\"\")\n        window.localStorage.removeItem(\"token\")\n        window.location.reload();\n    }\n  return (\n    <div className='main'>\n        <HomeNavBar />\n        <h2>Created by Rishaan Kumar</h2>\n        <h3>Go to <a href=\"https://rishaan.live\">https://rishaan.live</a> to learn more!</h3>\n    </div>\n  );\n}\n\nexport default AboutPage;","/Users/rishaankumar/Desktop/Code/TrackTheSpot_v1/track-the-spot/src/HomeNavBar.js",["146"],[],"import './Home.css';\nimport { useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Drawer from '@mui/material/Drawer';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Button from '@mui/material/Button';\n\nfunction Home({ onLogout }) {\n    const [token, setToken] = useState(\"\");\n    const [drawerOpen, setDrawerOpen] = useState(false);\n\n    const logout = () => {\n        setToken(\"\");\n        window.localStorage.removeItem(\"token\");\n        window.location.reload();\n    };\n\n    const toggleDrawer = (open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        setDrawerOpen(open);\n    };\n\n    const navLinks = [\n        { label: 'Home', path: '/' },\n        { label: 'Recommendations', path: '/recommendations' },\n        { label: 'About', path: '/about' },\n        { label: 'Logout', path: '/', action: logout }\n    ];\n\n    return (\n        <div className='Home'>\n            <link rel=\"stylesheet\" href=\"https://use.typekit.net/lll4eml.css\"></link>\n            <AppBar position=\"static\" sx={{ backgroundColor: '#479454' }}> {/* Custom bg color */}\n                <Toolbar>\n                    <IconButton \n                        edge=\"start\" \n                        color=\"inherit\" \n                        aria-label=\"menu\" \n                        onClick={toggleDrawer(true)}\n                        sx={{ display: { xs: 'block', md: 'none' } }} // Only show on small screens\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Link to=\"/\" className=\"link\" style={{ flexGrow: 1 }}>\n                        <p className='navBarItem'>TrackTheSpot</p>\n                    </Link>\n                    <div className=\"desktopNav\" sx={{ display: { xs: 'none', md: 'flex' } }}>\n                        {navLinks.map((link) => (\n                            <Link key={link.label} to={link.path} className=\"link\">\n                                <Button\n                                    variant=\"contained\"\n                                    sx={{\n                                        backgroundColor: 'black',\n                                        color: 'white',\n                                        '&:hover': {\n                                            backgroundColor: '#333', // Slightly lighter black for hover\n                                        },\n                                    }}\n                                    onClick={link.action}\n                                >\n                                    {link.label}\n                                </Button>\n                            </Link>\n                        ))}\n                    </div>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                anchor=\"left\"\n                open={drawerOpen}\n                onClose={toggleDrawer(false)}\n                sx={{ \n                    '& .MuiDrawer-paper': {\n                        backgroundColor: '#479454', // Custom background color for Drawer\n                        color: 'white', // Text color for contrast\n                    } \n                }}\n            >\n                <List>\n                    {navLinks.map((link) => (\n                        <ListItem button key={link.label} onClick={link.action || toggleDrawer(false)}>\n                            <Link to={link.path} className=\"link\">\n                                <ListItemText primary={link.label} />\n                            </Link>\n                        </ListItem>\n                    ))}\n                </List>\n            </Drawer>\n        </div>\n    );\n}\n\nexport default Home;","/Users/rishaankumar/Desktop/Code/TrackTheSpot_v1/track-the-spot/src/TableNavBar.js",["147","148","149","150","151"],[],"/Users/rishaankumar/Desktop/Code/TrackTheSpot_v1/track-the-spot/src/RecPage.js",["152","153","154"],[],"// RecPage.js\nimport './RecPage.css';\nimport { useEffect, useState } from \"react\";\nimport Table from './Table.js';\nimport HomeNavBar from './HomeNavBar.js';\n\nfunction RecPage() {\n    return (\n        <div className='RecPage'>\n            <HomeNavBar />\n            <h2>Recommended Songs</h2>\n            \n            <h4>This feature is currently not available on this hosted version because commercial API keys are expensive :/ </h4>\n        </div>\n    );\n}\n\nexport default RecPage;\n","/Users/rishaankumar/Desktop/Code/TrackTheSpot_v1/track-the-spot/src/Artist.js",[],[],"/Users/rishaankumar/Desktop/Code/wrappedly/wrappedly/src/index.js",[],[],["155","156","157","158","159","160"],"/Users/rishaankumar/Desktop/Code/wrappedly/wrappedly/src/App.js",[],[],"/Users/rishaankumar/Desktop/Code/wrappedly/wrappedly/src/AboutPage.js",[],[],"/Users/rishaankumar/Desktop/Code/wrappedly/wrappedly/src/Landing.js",[],[],"/Users/rishaankumar/Desktop/Code/wrappedly/wrappedly/src/RecPage.js",[],[],"/Users/rishaankumar/Desktop/Code/wrappedly/wrappedly/src/Home.js",["161","162"],[],"import './Home.css';\nimport { useEffect, useState } from \"react\";\nimport Table from './Table.js';\nimport HomeNavBar from './HomeNavBar.js';\nimport { useNavigate } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Skeleton from '@mui/material/Skeleton';\n\nfunction Home({ onLogout }) {\n    const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\n    const [topItems, setTopItems] = useState([]);\n    const [activeDatatype, setActiveDatatype] = useState('tracks');\n    const [activeDuration, setActiveDuration] = useState('short_term');\n    const [loading, setLoading] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        if (!token) {\n            navigate('/landing');\n            return;\n        }\n        fetchTopItems();\n    }, [token, activeDatatype, activeDuration, navigate]);\n\n    const fetchTopItems = async () => {\n        setLoading(true);\n        setTopItems([]); // Clear old data immediately to prevent stutter\n        \n        try {\n            const response = await fetch(\n                `https://api.spotify.com/v1/me/top/${activeDatatype}?time_range=${activeDuration}&limit=50`,\n                {\n                    method: 'GET',\n                    headers: {\n                        'Authorization': `Bearer ${token}`\n                    }\n                }\n            );\n\n            if (!response.ok) {\n                throw new Error(`Failed to fetch top items: ${response.status} ${response.statusText}`);\n            }\n\n            const data = await response.json();\n            console.log(\"API Response Data:\", data); // Log API response\n            \n            // Set new data immediately for smoother experience\n            setTopItems(data.items || []);\n            setLoading(false);\n        } catch (error) {\n            console.error(\"Error fetching top items:\", error);\n            setLoading(false);\n        }\n    };\n\n    const handleDatatypeClick = (datatype) => {\n        if (datatype !== activeDatatype && !loading) {\n            setActiveDatatype(datatype);\n        }\n    };\n\n    const handleDurationClick = (duration) => {\n        if (duration !== activeDuration && !loading) {\n            setActiveDuration(duration);\n        }\n    };\n\n    const isActive = (current, active) => current === active;\n    const isDisabled = loading;\n\n    const SkeletonLoader = () => (\n        <div className=\"skeleton-container\">\n            {[...Array(10)].map((_, index) => (\n                <div key={index} className=\"skeleton-item\">\n                    <Skeleton \n                        variant=\"rectangular\" \n                        width={60} \n                        height={60} \n                        sx={{ borderRadius: '8px', backgroundColor: 'rgba(71, 148, 84, 0.1)' }}\n                    />\n                    <div className=\"skeleton-text\">\n                        <Skeleton \n                            variant=\"text\" \n                            width=\"60%\" \n                            height={24}\n                            sx={{ backgroundColor: 'rgba(71, 148, 84, 0.1)' }}\n                        />\n                        <Skeleton \n                            variant=\"text\" \n                            width=\"40%\" \n                            height={20}\n                            sx={{ backgroundColor: 'rgba(71, 148, 84, 0.1)' }}\n                        />\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n\n    return (\n        <div className='Home'>\n            <HomeNavBar onLogout={onLogout} />\n            <div className='controls'>\n                <div className='typeControls'>\n                    <div className=\"toggle-group\">\n                        <Button\n                            className=\"toggle-button\"\n                            variant={isActive('tracks', activeDatatype) ? \"contained\" : \"outlined\"}\n                            disabled={isDisabled}\n                            sx={{\n                                backgroundColor: isActive('tracks', activeDatatype) ? '#1a1a1a' : 'transparent',\n                                border: isActive('tracks', activeDatatype) ? '2px solid #ffffff' : '2px solid #333333',\n                                '&:hover': {\n                                    backgroundColor: isActive('tracks', activeDatatype) ? '#2a2a2a' : '#1a1a1a',\n                                    border: '2px solid #666666',\n                                },\n                                '&:disabled': {\n                                    backgroundColor: isActive('tracks', activeDatatype) ? '#1a1a1a' : 'transparent',\n                                    border: isActive('tracks', activeDatatype) ? '2px solid #ffffff' : '2px solid #333333',\n                                    opacity: 0.6,\n                                },\n                                color: isActive('tracks', activeDatatype) ? '#ffffff' : '#cccccc',\n                                fontFamily: 'Helvetica, Arial, sans-serif',\n                                fontSize: '14px',\n                                fontWeight: '600',\n                                textTransform: 'lowercase',\n                                borderRadius: '25px',\n                                padding: '12px 24px',\n                                minWidth: '120px',\n                                transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n                                boxShadow: isActive('tracks', activeDatatype) ? '0 0 20px rgba(255, 255, 255, 0.2)' : 'none',\n                            }}\n                            onClick={() => handleDatatypeClick('tracks')}\n                        >\n                            {loading && isActive('tracks', activeDatatype) ? \n                                <CircularProgress size={16} sx={{ color: 'white', marginRight: 1 }} /> : null\n                            }\n                            songs\n                        </Button>\n                        <Button\n                            className=\"toggle-button\"\n                            variant={isActive('artists', activeDatatype) ? \"contained\" : \"outlined\"}\n                            disabled={isDisabled}\n                            sx={{\n                                backgroundColor: isActive('artists', activeDatatype) ? '#1a1a1a' : 'transparent',\n                                border: isActive('artists', activeDatatype) ? '2px solid #ffffff' : '2px solid #333333',\n                                '&:hover': {\n                                    backgroundColor: isActive('artists', activeDatatype) ? '#2a2a2a' : '#1a1a1a',\n                                    border: '2px solid #666666',\n                                },\n                                '&:disabled': {\n                                    backgroundColor: isActive('artists', activeDatatype) ? '#1a1a1a' : 'transparent',\n                                    border: isActive('artists', activeDatatype) ? '2px solid #ffffff' : '2px solid #333333',\n                                    opacity: 0.6,\n                                },\n                                color: isActive('artists', activeDatatype) ? '#ffffff' : '#cccccc',\n                                fontFamily: 'Helvetica, Arial, sans-serif',\n                                fontSize: '14px',\n                                fontWeight: '600',\n                                textTransform: 'lowercase',\n                                borderRadius: '25px',\n                                padding: '12px 24px',\n                                minWidth: '120px',\n                                transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n                                boxShadow: isActive('artists', activeDatatype) ? '0 0 20px rgba(255, 255, 255, 0.2)' : 'none',\n                            }}\n                            onClick={() => handleDatatypeClick('artists')}\n                        >\n                            {loading && isActive('artists', activeDatatype) ? \n                                <CircularProgress size={16} sx={{ color: 'white', marginRight: 1 }} /> : null\n                            }\n                            artists\n                        </Button>\n                    </div>\n                </div>\n                <div className='timeControls'>\n                    <div className=\"toggle-group\">\n                        <Button\n                            className=\"toggle-button\"\n                            variant={isActive('short_term', activeDuration) ? \"contained\" : \"outlined\"}\n                            disabled={isDisabled}\n                            sx={{\n                                backgroundColor: isActive('short_term', activeDuration) ? '#1a1a1a' : 'transparent',\n                                border: isActive('short_term', activeDuration) ? '2px solid #ffffff' : '2px solid #333333',\n                                '&:hover': {\n                                    backgroundColor: isActive('short_term', activeDuration) ? '#2a2a2a' : '#1a1a1a',\n                                    border: '2px solid #666666',\n                                },\n                                '&:disabled': {\n                                    backgroundColor: isActive('short_term', activeDuration) ? '#1a1a1a' : 'transparent',\n                                    border: isActive('short_term', activeDuration) ? '2px solid #ffffff' : '2px solid #333333',\n                                    opacity: 0.6,\n                                },\n                                color: isActive('short_term', activeDuration) ? '#ffffff' : '#cccccc',\n                                fontFamily: 'Helvetica, Arial, sans-serif',\n                                fontSize: '14px',\n                                fontWeight: '600',\n                                textTransform: 'lowercase',\n                                borderRadius: '25px',\n                                padding: '12px 20px',\n                                minWidth: '100px',\n                                transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n                                boxShadow: isActive('short_term', activeDuration) ? '0 0 20px rgba(255, 255, 255, 0.2)' : 'none',\n                            }}\n                            onClick={() => handleDurationClick('short_term')}\n                        >\n                            {loading && isActive('short_term', activeDuration) ? \n                                <CircularProgress size={16} sx={{ color: 'white', marginRight: 1 }} /> : null\n                            }\n                            month\n                        </Button>\n                        <Button\n                            className=\"toggle-button\"\n                            variant={isActive('medium_term', activeDuration) ? \"contained\" : \"outlined\"}\n                            disabled={isDisabled}\n                            sx={{\n                                backgroundColor: isActive('medium_term', activeDuration) ? '#1a1a1a' : 'transparent',\n                                border: isActive('medium_term', activeDuration) ? '2px solid #ffffff' : '2px solid #333333',\n                                '&:hover': {\n                                    backgroundColor: isActive('medium_term', activeDuration) ? '#2a2a2a' : '#1a1a1a',\n                                    border: '2px solid #666666',\n                                },\n                                '&:disabled': {\n                                    backgroundColor: isActive('medium_term', activeDuration) ? '#1a1a1a' : 'transparent',\n                                    border: isActive('medium_term', activeDuration) ? '2px solid #ffffff' : '2px solid #333333',\n                                    opacity: 0.6,\n                                },\n                                color: isActive('medium_term', activeDuration) ? '#ffffff' : '#cccccc',\n                                fontFamily: 'Helvetica, Arial, sans-serif',\n                                fontSize: '14px',\n                                fontWeight: '600',\n                                textTransform: 'lowercase',\n                                borderRadius: '25px',\n                                padding: '12px 20px',\n                                minWidth: '100px',\n                                transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n                                boxShadow: isActive('medium_term', activeDuration) ? '0 0 20px rgba(255, 255, 255, 0.2)' : 'none',\n                            }}\n                            onClick={() => handleDurationClick('medium_term')}\n                        >\n                            {loading && isActive('medium_term', activeDuration) ? \n                                <CircularProgress size={16} sx={{ color: 'white', marginRight: 1 }} /> : null\n                            }\n                            6 months\n                        </Button>\n                        <Button\n                            className=\"toggle-button\"\n                            variant={isActive('long_term', activeDuration) ? \"contained\" : \"outlined\"}\n                            disabled={isDisabled}\n                            sx={{\n                                backgroundColor: isActive('long_term', activeDuration) ? '#1a1a1a' : 'transparent',\n                                border: isActive('long_term', activeDuration) ? '2px solid #ffffff' : '2px solid #333333',\n                                '&:hover': {\n                                    backgroundColor: isActive('long_term', activeDuration) ? '#2a2a2a' : '#1a1a1a',\n                                    border: '2px solid #666666',\n                                },\n                                '&:disabled': {\n                                    backgroundColor: isActive('long_term', activeDuration) ? '#1a1a1a' : 'transparent',\n                                    border: isActive('long_term', activeDuration) ? '2px solid #ffffff' : '2px solid #333333',\n                                    opacity: 0.6,\n                                },\n                                color: isActive('long_term', activeDuration) ? '#ffffff' : '#cccccc',\n                                fontFamily: 'Helvetica, Arial, sans-serif',\n                                fontSize: '14px',\n                                fontWeight: '600',\n                                textTransform: 'lowercase',\n                                borderRadius: '25px',\n                                padding: '12px 20px',\n                                minWidth: '100px',\n                                transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n                                boxShadow: isActive('long_term', activeDuration) ? '0 0 20px rgba(255, 255, 255, 0.2)' : 'none',\n                            }}\n                            onClick={() => handleDurationClick('long_term')}\n                        >\n                            {loading && isActive('long_term', activeDuration) ? \n                                <CircularProgress size={16} sx={{ color: 'white', marginRight: 1 }} /> : null\n                            }\n                            all time\n                        </Button>\n                    </div>\n                </div>\n            </div>\n            \n            <div className={`content-container ${loading ? 'loading' : 'loaded'}`}>\n                {loading ? (\n                    <SkeletonLoader />\n                ) : topItems.length > 0 ? (\n                    <Table topItems={topItems} datatype={activeDatatype} />\n                ) : (\n                    <p className=\"no-data\">No data available</p>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","/Users/rishaankumar/Desktop/Code/wrappedly/wrappedly/src/Table.js",[],[],"/Users/rishaankumar/Desktop/Code/wrappedly/wrappedly/src/HomeNavBar.js",[],[],"/Users/rishaankumar/Desktop/Code/wrappedly/wrappedly/src/Song.js",["163","164"],[],"/Users/rishaankumar/Desktop/Code/wrappedly/wrappedly/src/Artist.js",[],[],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"165","replacedBy":"177"},{"ruleId":"167","replacedBy":"178"},{"ruleId":"169","replacedBy":"179"},{"ruleId":"171","replacedBy":"180"},{"ruleId":"173","replacedBy":"181"},{"ruleId":"175","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":6,"column":7,"nodeType":"185","messageId":"186","endLine":6,"endColumn":61,"fix":"187"},{"ruleId":"188","severity":1,"message":"189","line":12,"column":13,"nodeType":"185","endLine":12,"endColumn":60},{"ruleId":"190","severity":1,"message":"191","line":9,"column":19,"nodeType":"192","messageId":"193","endLine":9,"endColumn":27},{"ruleId":"194","severity":1,"message":"195","line":22,"column":8,"nodeType":"196","endLine":22,"endColumn":57,"suggestions":"197"},{"ruleId":"190","severity":1,"message":"198","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":19},{"ruleId":"190","severity":1,"message":"199","line":2,"column":31,"nodeType":"192","messageId":"193","endLine":2,"endColumn":37},{"ruleId":"190","severity":1,"message":"200","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":12},{"ruleId":"190","severity":1,"message":"201","line":4,"column":8,"nodeType":"192","messageId":"193","endLine":4,"endColumn":15},{"ruleId":"190","severity":1,"message":"202","line":6,"column":10,"nodeType":"192","messageId":"193","endLine":6,"endColumn":23},{"ruleId":"190","severity":1,"message":"203","line":6,"column":25,"nodeType":"192","messageId":"193","endLine":6,"endColumn":30},{"ruleId":"190","severity":1,"message":"204","line":6,"column":32,"nodeType":"192","messageId":"193","endLine":6,"endColumn":38},{"ruleId":"190","severity":1,"message":"205","line":11,"column":11,"nodeType":"192","messageId":"193","endLine":11,"endColumn":17},{"ruleId":"190","severity":1,"message":"206","line":15,"column":12,"nodeType":"192","messageId":"193","endLine":15,"endColumn":17},{"ruleId":"190","severity":1,"message":"207","line":2,"column":8,"nodeType":"192","messageId":"193","endLine":2,"endColumn":12},{"ruleId":"190","severity":1,"message":"208","line":4,"column":10,"nodeType":"192","messageId":"193","endLine":4,"endColumn":14},{"ruleId":"190","severity":1,"message":"209","line":4,"column":16,"nodeType":"192","messageId":"193","endLine":4,"endColumn":29},{"ruleId":"190","severity":1,"message":"203","line":4,"column":31,"nodeType":"192","messageId":"193","endLine":4,"endColumn":36},{"ruleId":"190","severity":1,"message":"204","line":4,"column":38,"nodeType":"192","messageId":"193","endLine":4,"endColumn":44},{"ruleId":"190","severity":1,"message":"198","line":3,"column":10,"nodeType":"192","messageId":"193","endLine":3,"endColumn":19},{"ruleId":"190","severity":1,"message":"210","line":3,"column":21,"nodeType":"192","messageId":"193","endLine":3,"endColumn":29},{"ruleId":"190","severity":1,"message":"211","line":4,"column":8,"nodeType":"192","messageId":"193","endLine":4,"endColumn":13},{"ruleId":"165","replacedBy":"212"},{"ruleId":"167","replacedBy":"213"},{"ruleId":"169","replacedBy":"214"},{"ruleId":"171","replacedBy":"215"},{"ruleId":"173","replacedBy":"216"},{"ruleId":"175","replacedBy":"217"},{"ruleId":"190","severity":1,"message":"191","line":11,"column":19,"nodeType":"192","messageId":"193","endLine":11,"endColumn":27},{"ruleId":"194","severity":1,"message":"195","line":24,"column":8,"nodeType":"196","endLine":24,"endColumn":57,"suggestions":"218"},{"ruleId":"183","severity":1,"message":"184","line":6,"column":7,"nodeType":"185","messageId":"186","endLine":6,"endColumn":61,"fix":"219"},{"ruleId":"188","severity":1,"message":"189","line":12,"column":13,"nodeType":"185","endLine":12,"endColumn":60},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["220"],"no-whitespace-before-property",[],"rest-spread-spacing",[],[],[],[],["220"],[],[],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"221","text":"222"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'setToken' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchTopItems'. Either include it or remove the dependency array.","ArrayExpression",["223"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'Home' is defined but never used.","'Landing' is defined but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Routes' is defined but never used.","'logout' is assigned a value but never used.","'token' is assigned a value but never used.","'Song' is defined but never used.","'Link' is defined but never used.","'browserRouter' is defined but never used.","'useState' is defined but never used.","'Table' is defined but never used.",[],[],[],["220"],[],[],["224"],{"range":"225","text":"222"},"no-object-constructor",[125,125]," rel=\"noreferrer\"",{"desc":"226","fix":"227"},{"desc":"226","fix":"228"},[125,125],"Update the dependencies array to be: [token, activeDatatype, activeDuration, navigate, fetchTopItems]",{"range":"229","text":"230"},{"range":"231","text":"230"},[707,756],"[token, activeDatatype, activeDuration, navigate, fetchTopItems]",[867,916]]